{"version":3,"sources":["components/Avatar.js","components/User.js","components/FriendsList.js","components/Search.js","includes/transliteration/index.js","includes/filterBySubstr/index.js","components/GroupCreation.js","data/friends.js","App.js","serviceWorker.js","index.js"],"names":["Avatar","_this$props","this","props","src","online","style","background","backgroundSize","react_default","a","createElement","className","Component","User","handleSelectionChanged","_this","selected","onSelectedChanged","user","checked","index","indexOf","concat","Object","toConsumableArray","slice","handleBSPress","e","_this$props2","key","preventDefault","stopPropagation","_this$props$user","avatarSrc","name","surname","tabIndex","onKeyPress","onKeyDown","onClick","components_Avatar","capitalize","FriendsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isSelected","id","some","s","handleScroll","window","clearTimeout","isScrolling","target","cHeight","clientHeight","scHeight","scrollHeight","height","top","scrollTop","setTimeout","setState","opacity","state","_this2","friends","data","map","f","components_User","onScroll","ref","friendListRef","Search","handleChange","searchChanged","searchBlock","React","createRef","_","prevState","current","handleResize","selectedUsers","u","type","onChange","placeholder","value","rus","split","eng","transliterate","text","en","forEach","l","i","join","filterUsersBySubstr","substr","users","result","test","isEn","toLowerCase","transSubstr","tr","lsSubstr","ru","fromEn","toEn","switchLayout","transLsSubstr","filter","fullName","includes","GroupCreation","scrollUserList","prevHeight","scrollBy","updateFilteredUsers","filteredUsers","filterUsers","searchValue","debounce","content","length","components_FriendsList","components_Search","data_friends","App","components_GroupCreation","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f726f55.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Avatar extends Component {\n    render() {\n        const {src, online} = this.props;\n        const style = src ? {\n                background: 'url(' + src + ') no-repeat 50%',\n                backgroundSize: 'cover',\n            } : {\n                background: '#eceff6 url(https://vk.com/images/icons/camera.png) no-repeat 50%',\n                backgroundSize: '45%',\n            }\n        return (\n            <div style={style} className={online + ' avatar'}></div>\n        )\n    }\n}\n\nexport default Avatar\n","import React, {Component} from 'react';\nimport capitalize from 'lodash/capitalize'\nimport Avatar from './Avatar';\n\nclass User extends Component {\n    handleSelectionChanged = () => {\n        const {selected, onSelectedChanged, user, checked} = this.props;\n        if (!checked) {\n            onSelectedChanged([...selected, user]);\n        } else {\n            const index = selected.indexOf(user);\n            const removed = [\n                ...selected.slice(0, index),\n                ...selected.slice(index + 1),\n            ];\n            onSelectedChanged(removed);\n        }\n    }\n\n    handleBSPress = (e) => {\n        const {selected, onSelectedChanged} = this.props;\n        if (e.key === 'Backspace') {\n            e.preventDefault();\n            e.stopPropagation();\n            onSelectedChanged(selected.slice(0, -1))\n        }\n    }\n\n    render() {\n        const {avatarSrc, name, surname, online} = this.props.user;\n        return (\n            <div className='user'\n                tabIndex='0'\n                onKeyPress={this.handleSelectionChanged}\n                onKeyDown={this.handleBSPress}\n                onClick={this.handleSelectionChanged}>\n                <div className='userWrap'>\n                    <Avatar src={avatarSrc} online={online}/>\n                    <div className='fullName'>\n                        <span>{capitalize(name) + ' '}</span>\n                        <span>{capitalize(surname)}</span>\n                    </div>\n                </div>\n                <div className={(this.props.checked ? 'checked ' : '') + 'select'}></div>\n            </div>\n        );\n    }\n}\n\nexport default User;\n","import React, {Component} from 'react';\nimport User from './User';\n\nclass FriendsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            top: 0,\n            height: 10,\n            opacity: 0,\n        };\n    }\n    isSelected = (id) => this.props.selected.some(s => s.id === id);\n\n    handleScroll = (e) => {\n        window.clearTimeout(this.isScrolling);\n        const target = e.target;\n        const cHeight = target.clientHeight;\n        const scHeight = target.scrollHeight;\n        const scrollTop = target.scrollTop;\n        const height = cHeight * cHeight / scHeight;\n        const top = scrollTop / scHeight * cHeight;\n\n        this.isScrolling = setTimeout(() => {\n            this.setState({opacity: 0})\n        }, 100);\n        this.setState({top, height, opacity: 1});\n\n    }\n\n    render() {\n        const friends = this.props.data.map(f => (<User\n            key={f.id}\n            selected={this.props.selected}\n            onSelectedChanged={this.props.onSelectedChanged}\n            user={f}\n            checked={this.isSelected(f.id)}/>)\n        );\n        return (\n            <div className='scrollWrap'>\n                <div onScroll={this.handleScroll} ref={this.props.friendListRef} className='friendsList'>\n                    {friends}\n                </div>\n                <div style={this.state} className='fakeScroll'></div>\n            </div>\n        )\n    }\n}\n\nexport default FriendsList;\n","import React, {Component} from 'react';\nimport capitalize from 'lodash/capitalize'\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.searchBlock = React.createRef();\n        this.state = {\n            height: 0,\n        }\n    }\n\n    handleChange = e => {\n        this.props.searchChanged(e)\n    }\n\n    componentDidUpdate(_, prevState) {\n        const height = this.searchBlock.current.clientHeight;\n        if (height !== prevState.height) {\n            this.setState({height});\n            this.props.handleResize(height, prevState.height);\n        }\n    }\n\n    render() {\n        const selectedUsers = this.props.selected.map(u => (\n            <div className='user' key={u.id}>\n                <span>{capitalize(u.name) + ' '}</span>\n                <span>{capitalize(u.surname)}</span>\n            </div>\n        ));\n        return <div ref={this.searchBlock} className='search'>\n            <div className='flexContainer'>\n                {selectedUsers}\n                <input\n                className='searchInput'\n                type='text'\n                onChange={this.handleChange}\n                placeholder={'Введите имя или фамилию'}\n                value={this.props.value}/>\n            </div>\n        </div>\n    }\n}\n\nexport default Search;\n","const rus = 'щ ш ч ц ю я ё ж ъ ы э а б в г д е з и й к л м н о п р с т у ф х ь'.split(' ');\nconst eng = 'shh sh ch cz yu ya yo zh `` y` e` a b v g d e z i j k l m n o p r s t u f x `'.split(' ');\n\nconst transliterate = (text, en) => {\n    rus.forEach((l, i) => {\n        text = text.split(\n            en ? eng[i] : rus[i]\n        ).join(\n            en ? rus[i] : eng[i]\n        );\n    });\n    return text;\n};\n\nexport default transliterate\n\n","import ru from \"convert-layout/ru\";\nimport tr from \"../transliteration\";\n\nconst isEn = (text) => {\n    let result = false;\n    for (let l in text) {\n        if (/[a-z-A-Z]/.test(text[l])) {\n            result = true;\n            break;\n        } else if (/[а-я-А-Я]/.test(text[l])) break;\n    }\n    return result;\n}\n\nconst switchLayout = (text, en) => en\n                             ? ru.fromEn(text) : ru.toEn(text);\n\nconst filterUsersBySubstr = (substr, users) => {\n    substr = substr.toLowerCase();\n    const en = isEn(substr);\n    const transSubstr = tr(substr, en);\n    const lsSubstr = switchLayout(substr, en);\n    const transLsSubstr = tr(lsSubstr, !en);\n\n    return users.filter(u => {\n        const fullName = (u.name + ' ' + u.surname).toLowerCase();\n        return fullName.includes(substr) || fullName.includes(lsSubstr)\n               || fullName.includes(transSubstr) || fullName.includes(transLsSubstr)\n    })\n}\n\nexport default filterUsersBySubstr;\n","import React, {Component} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport FriendsList from './FriendsList';\nimport Search from './Search';\nimport filterUsers from '../includes/filterBySubstr';\n\nclass GroupCreation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchValue: '',\n            filteredUsers: this.props.data,\n            selectedUsers: [],\n        };\n\n        this.friendListRef = React.createRef();\n\n        this.updateFilteredUsers = debounce(this.updateFilteredUsers);\n    }\n\n    onSelectedChanged = (selected) => this.setState({selectedUsers: selected})\n\n    scrollUserList = (height, prevHeight) =>\n        prevHeight && this.friendListRef.current.scrollBy(\n            0, (height - prevHeight) / 2)\n\n    updateFilteredUsers = () => this.setState({\n        filteredUsers: filterUsers(this.state.searchValue, this.props.data)\n    })\n\n    searchChanged = e =>\n        this.setState({searchValue: e.target.value}, this.updateFilteredUsers)\n\n\n    render() {\n        const content = this.state.filteredUsers.length || !this.state.searchValue\n            ? <FriendsList\n                friendListRef={this.friendListRef}\n                selected={this.state.selectedUsers}\n                onSelectedChanged={this.onSelectedChanged}\n                data={this.state.filteredUsers}/>\n            : (<div className='emptyResult'>\n                <span>{'There is no result for \"'+ this.state.searchValue +'\"'}</span>\n            </div>);\n\n        return (\n            <div className='GroupCreation'>\n                <header>\n                    <span className='title'>Создание беседы</span>\n                    <span className='closeButton' tabIndex='1'></span>\n                </header>\n                <Search\n                    handleResize={this.scrollUserList}\n                    selected={this.state.selectedUsers}\n                    value={this.state.searchValue}\n                    searchChanged={this.searchChanged}/>\n                {content}\n                <footer>\n                    <div className='flexContainer'>\n                        <button className={\n                            'button' + (this.state.selectedUsers.length ? '' : ' disabled')\n                            }\n                        >Создать беседу</button>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default GroupCreation;\n","export default [\n    {\n        name: 'андрей',\n        surname: 'гло',\n        avatarSrc: 'https://www.rpnation.com/data/avatars/o/56/56258.jpg',\n        online: 'mobile',\n        id: 'asdas1',\n    },\n    {\n        name: 'витек',\n        surname: 'virtual',\n        online: 'desktop',\n        id: 'asdas2',\n    },\n    {\n        name: 'Borya',\n        surname: 'гора',\n        online: '',\n        id: 'asdas3',\n    },\n    {\n        name: 'Катя',\n        surname: 'егорова',\n        online: '',\n        id: 'asdas4',\n    },\n    {\n        name: 'Ярослав',\n        surname: 'Филипович',\n        avatarSrc: 'https://www.tscollection.ru/data/images/man.png',\n        online: 'mobile',\n        id: 'asdas5',\n    },\n    {\n        name: 'андрей',\n        surname: 'гло',\n        avatarSrc: 'https://www.rpnation.com/data/avatars/o/56/56258.jpg',\n        online: 'mobile',\n        id: 'asdas6',\n    },\n    {\n        name: 'витек',\n        surname: 'virtual',\n        online: 'desktop',\n        id: 'asdas7',\n    },\n    {\n        name: 'Borya',\n        surname: 'гора',\n        online: '',\n        id: 'asdas8',\n    },\n    {\n        name: 'Катя',\n        surname: 'егорова',\n        online: '',\n        id: 'asdas9',\n    },\n    {\n        name: 'Ярослав',\n        surname: 'Филипович',\n        avatarSrc: 'https://www.tscollection.ru/data/images/man.png',\n        online: 'mobile',\n        id: 'asdas10',\n    },\n]\n","import React from 'react';\nimport './App.css';\nimport GroupCreation from './components/GroupCreation'\nimport data from './data/friends';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <GroupCreation data={data}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}